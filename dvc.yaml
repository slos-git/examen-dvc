stages:
  import:
    cmd: python src/data/import_raw_data.py
    deps:
    - src/data/import_raw_data.py
    outs:
    - data/raw_data/raw.csv
  split:
    cmd: python src/data/split_dataset.py
    deps:
    - data/raw_data/raw.csv
    - src/data/split_dataset.py
    outs:
    - data/processed_data/X_test.csv
    - data/processed_data/X_train.csv
    - data/processed_data/y_test.csv
    - data/processed_data/y_train.csv
  normalize:
    cmd: python src/data/normalize_dataset.py
    deps:
    - data/processed_data/X_test.csv
    - data/processed_data/X_train.csv
    - src/data/normalize_dataset.py
    outs:
    - data/processed_data/X_test_scaled.csv
    - data/processed_data/X_train_scaled.csv
  params:
    cmd: python src/models/params.py
    deps:
    - data/processed_data/X_test_scaled.csv
    - data/processed_data/X_train_scaled.csv
    - src/models/params.py
    outs:
    - models/parameters.pkl
  train:
    cmd: python src/models/train_model.py
    deps:
    - data/processed_data/X_train_scaled.csv
    - data/processed_data/y_train.csv
    - models/parameters.pkl
    - src/models/train_model.py
    outs:
    - models/trained_model.joblib
  evaluate:
    cmd: python src/models/evaluate_model.py
    deps:
    - data/processed_data/X_test_scaled.csv
    - data/processed_data/y_test.csv
    - models/trained_model.joblib
    - src/models/evaluate_model.py
    metrics:
    - metrics/score.json:
        cache: false
